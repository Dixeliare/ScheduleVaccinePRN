@page
@model ScheduleVaccineRazor.Pages.Dashboard.IndexModel
@{
    ViewData["Title"] = "Vaccination Dashboard";
}

<div class="container-fluid">
    <!-- Dashboard Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-5 fw-bold text-primary">
            <i class="bi bi-speedometer2 me-3"></i>Vaccination Dashboard
        </h1>
        <div class="text-muted">
            <span class="me-3"><i class="bi bi-calendar me-2"></i>@DateTime.Now.ToString("MMM dd, yyyy")</span>
        </div>
    </div>

    <!-- Stats Cards -->
    <div class="row g-4 mb-5">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary bg-gradient text-white shadow-lg h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-subtitle mb-2">Total Appointments</h5>
                            <h2 class="card-title mb-0">@Model.TotalAppointments</h2>
                        </div>
                        <i class="bi bi-calendar-check fs-1 opacity-50"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card bg-success bg-gradient text-white shadow-lg h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-subtitle mb-2">Total Revenue</h5>
                            <h2 class="card-title mb-0">@Model.TotalRevenue.ToString("C")</h2>
                        </div>
                        <i class="bi bi-currency-dollar fs-1 opacity-50"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add more stats cards here if needed -->
    </div>

    <!-- Revenue Chart Section -->
    <div class="card shadow-lg">
        <div class="card-header bg-white border-bottom-0">
            <h4 class="card-title mb-0">
                <i class="bi bi-bar-chart-line me-2"></i>Monthly Revenue Overview
            </h4>
        </div>
        <div class="card-body">
            <div class="chart-container" style="position: relative; height: 400px;">
                <canvas id="revenueChart"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

<style>
    .card {
        border-radius: 1rem;
        transition: transform 0.2s;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .chart-container {
        margin: 0 auto;
    }

    .card-title {
        font-size: 2rem;
        font-weight: 600;
    }

    .card-subtitle {
        font-size: 0.9rem;
        opacity: 0.85;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const ctx = document.getElementById('revenueChart').getContext('2d');
        const revenueData = @Html.Raw(Json.Serialize(Model.RevenueByMonth));

        const gradient = ctx.createLinearGradient(0, 0, 0, 400);
        gradient.addColorStop(0, 'rgba(75, 192, 192, 0.7)');
        gradient.addColorStop(1, 'rgba(75, 192, 192, 0.1)');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: revenueData.map(x => new Date(x.Month).toLocaleString('default', { month: 'long' })),
                datasets: [{
                    label: 'Revenue (USD)',
                    data: revenueData.map(x => x.Revenue),
                    backgroundColor: gradient,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 2,
                    borderRadius: 5,
                    borderSkipped: false
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        backgroundColor: 'rgba(0,0,0,0.8)',
                        bodyFont: { size: 14 },
                        titleFont: { size: 16 }
                    }
                },
                scales: {
                    x: {
                        grid: { display: false }
                    },
                    y: {
                        beginAtZero: true,
                        grid: { color: 'rgba(0,0,0,0.05)' },
                        ticks: {
                            callback: function(value) {
                                return '$' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });
    });
</script>